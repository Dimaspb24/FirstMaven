<?xml version="1.0" encoding="UTF-8"?>
<!-- 5 вариантов указания properties:-->
<!-- 1) project.-->
    <!-- project.groupId-->
<!-- 2) settings.-->
    <!--        <settings.something>${settings.localRepository}</settings.something>-->
<!-- 3) properties-->
    <!--${springframework.version}-->
<!-- 4) env.-->
    <!--${env.JAVA_HOME}-->
<!-- 5) System.getProperty-->
    <!-- -D -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.bogdanov</groupId>
    <artifactId>first-maven</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <modules>
        <module>database</module>
        <module>service</module>
        <module>web</module>
    </modules>
    <packaging>pom</packaging>

    <name>first-maven</name>
    <!-- FIXME change it to the project's website -->
    <url>http://www.example.com</url>

    <properties>
        <app.env>dev</app.env>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <springframework.version>5.3.7</springframework.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>jakarta.servlet</groupId>
                <artifactId>jakarta.servlet-api</artifactId>
                <version>5.0.0</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${springframework.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${springframework.version}</version>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.11</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

    </dependencies>

    <build>

<!--        Это нужно, чтобы maven подставлял наши properties в ${} после упаковки -->
<!--        Проверить можно используя goal resources:resources наблюдая при этом подставилось ли вместо ${} значение проперти-->
        <resources>
            <resource>
                <directory>${project.basedir}/src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>3.0.0-M1</version>
            </plugin>
        </plugins>

        <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
            <plugins>
                <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>

                <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.2.0</version>
                    <executions>
                        <execution>
                            <id>copy-docker-files</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${project.basedir}/target</outputDirectory>
                                <resources>
                                    <resource>
                                        <directory>${project.basedir}/docker</directory>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                    <configuration>
                        <source>8</source>
                        <target>8</target>
                    </configuration>
                    <executions>
                        <execution>
                            <id>Double compile</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.2</version>
                    <configuration>
                        <!--            <skip>true</skip>-->
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>3.0.0-M5</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>3.0.0-M1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>

                <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.9.1</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.8.7</version>
                    <executions>
                        <execution>
                            <id>prepare -agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>generate-jacoco-report</id>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <phase>prepare-package</phase>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>3.1.2</version>
                </plugin>
            </plugins>
        </pluginManagement>

    </build>

    <profiles>
        <profile>
            <id>prod</id>

<!--            <activation>-->
<!--                <activeByDefault>true</activeByDefault>-->
<!--                <os>-->
<!--                    <family>windows</family>-->
<!--                </os>-->
<!--                <jdk>11</jdk>-->
<!--                <file>-->
<!--                    <exists>${basedir}/pom.xml</exists>-->
<!--                </file>-->
<!--                <property>-->
<!--                    <name>test.prob</name>-->
<!--                    <value>example</value>-->
<!--                </property> &lt;!&ndash;системные проперти, которые задаются через (-D)&ndash;&gt;-->
<!--            </activation>-->

            <properties>
                <app.env>prod</app.env>  <!--override property-->
                <example.prop>example</example.prop>  <!--add property-->
            </properties>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.8.1</version>
                        <configuration>
                            <source>11</source>
                            <target>11</target>
                            <debug>false</debug>
                            <optimize>true</optimize>
                        </configuration>
                    </plugin>
                </plugins>
            </build>

        </profile>
    </profiles>


    <!--  M2_HOME/conf-->
    <!--  ~/.m2/settings.xml-->
<!--    <distributionManagement>-->
<!--        <snapshotRepository>-->
<!--            <id>nexus</id>-->
<!--            <url>http://localhost:9000/repository/maven-snapshots/</url>-->
<!--        </snapshotRepository>-->
<!--        <repository>-->
<!--            <id>nexus</id>-->
<!--            <url>http://localhost:9000/repository/maven-releases/</url>-->
<!--        </repository>-->
<!--    </distributionManagement>-->

</project>
